<?php

namespace App\Console\Commands;

use Illuminate\Console\Command;
use App\Models\User;
use App\Models\Changelog;
use Spatie\Permission\Models\Role;
use Spatie\Permission\Models\Permission;

class DiagnoseWebmaster extends Command
{
    protected $signature = 'webmaster:diagnose';
    protected $description = 'Diagnostica configura√ß√£o do Webmaster e Changelog';

    public function handle()
    {
        $this->info('üîç DIAGN√ìSTICO DO WEBMASTER E CHANGELOG');
        $this->newLine();

        // 1. Verificar Role
        $role = Role::where('name', 'webmaster')->first();
        $this->info('1Ô∏è‚É£  Role Webmaster:');
        if ($role) {
            $this->line('   ‚úÖ Existe');
            $this->line('   üìä Permiss√µes: ' . $role->permissions->count());
        } else {
            $this->error('   ‚ùå N√ÉO EXISTE - Execute: php artisan db:seed --class=WebmasterRoleSeeder');
        }
        $this->newLine();

        // 2. Verificar Permiss√µes de Changelog
        $permissions = Permission::where('name', 'like', 'changelogs.%')->get();
        $this->info('2Ô∏è‚É£  Permiss√µes de Changelog:');
        if ($permissions->count() > 0) {
            $this->line('   ‚úÖ ' . $permissions->count() . ' permiss√µes criadas');
            foreach ($permissions as $perm) {
                $this->line('      ‚Ä¢ ' . $perm->name);
            }
        } else {
            $this->error('   ‚ùå NENHUMA - Execute: php artisan db:seed --class=WebmasterRoleSeeder');
        }
        $this->newLine();

        // 3. Verificar Usu√°rio
        $user = User::where('email', 'webmaster@laserlink.com.br')->first();
        $this->info('3Ô∏è‚É£  Usu√°rio Webmaster:');
        if ($user) {
            $this->line('   ‚úÖ Existe');
            $this->line('   üë§ Nome: ' . $user->name);
            $this->line('   üìß Email: ' . $user->email);
            $this->line('   üîê Roles: ' . $user->getRoleNames()->implode(', '));
            $this->line('   ‚úÖ Tem role webmaster: ' . ($user->hasRole('webmaster') ? 'SIM' : 'N√ÉO'));
        } else {
            $this->error('   ‚ùå N√ÉO EXISTE - Execute: php artisan db:seed --class=WebmasterUserSeeder');
        }
        $this->newLine();

        // 4. Verificar Changelogs
        $changelogs = Changelog::count();
        $this->info('4Ô∏è‚É£  Changelogs:');
        $this->line('   üìù Total: ' . $changelogs);
        if ($changelogs === 0) {
            $this->warn('   ‚ö†Ô∏è  Nenhum changelog - Execute: php artisan db:seed --class=ChangelogSeeder');
        }
        $this->newLine();

        // 5. Rotas
        $this->info('5Ô∏è‚É£  Rotas:');
        $this->line('   üåê /admin/atualizacoes (listagem)');
        $this->line('   ‚ûï /admin/atualizacoes/criar (criar)');
        $this->newLine();

        // 6. Instru√ß√µes
        $this->info('üìã COMO TESTAR:');
        $this->line('   1Ô∏è‚É£  Fa√ßa LOGOUT do usu√°rio atual');
        $this->line('   2Ô∏è‚É£  Acesse: /admin/login');
        $this->line('   3Ô∏è‚É£  Login: webmaster@laserlink.com.br');
        $this->line('   4Ô∏è‚É£  Senha: webmaster123');
        $this->line('   5Ô∏è‚É£  No sidebar, ver√°: üöÄ Atualiza√ß√µes');
        $this->newLine();

        $this->info('‚úÖ Diagn√≥stico conclu√≠do!');
    }
}

